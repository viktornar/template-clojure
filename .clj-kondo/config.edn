;; -*- comment-column: 100; -*-
{:config-paths ["macros"]
 :linters
 {:aliased-namespace-symbol     {:level :warning}
  :invalid-arity                {:skip-args [beesbuddy.lib.util.match/match]} ; TODO (cam): can we fix these?
  :keyword-binding              {:level :warning}
  :main-without-gen-class       {:level :warning}
  :misplaced-docstring          {:level :warning}
  :missing-body-in-when         {:level :warning}
  :missing-docstring            {:level :warning}
  :missing-else-branch          {:level :warning}
  :namespace-name-mismatch      {:level :warning}
  :non-arg-vec-return-type-hint {:level :warning}
  :reduce-without-init          {:level :warning}
  :redundant-fn-wrapper         {:level :warning}
  :refer-all                    {:level :warning, :exclude [clojure.test]}
  :single-key-in                {:level :warning}
  :unsorted-required-namespaces {:level :warning}
  :unused-referred-var          {:exclude {compojure.core [GET DELETE POST PUT]}}
  :use                          {:level :warning}
  :warn-on-reflection           {:level :warning}

  :beesbuddy/defsetting-must-specify-export                             {:level :warning}
  :beesbuddy/i-like-making-cams-eyes-bleed-with-horrifically-long-tests {:level :warning}
  :beesbuddy/mbql-query-first-arg                                       {:level :warning}
  :beesbuddy/missing-test-expr-requires-in-cljs                         {:level :warning}
  :beesbuddy/require-shape-checker                                      {:level :warning}
  :beesbuddy/test-helpers-use-non-thread-safe-functions                 {:level :warning}
  :beesbuddy/validate-deftest                                           {:level :warning}
  :beesbuddy/validate-logging                                           {:level :warning}
  :beesbuddy/warn-about-schema=                                         {:level :warning}

  ;;
  ;; disabled linters
  ;;

  :unexpected-recur         {:level :off} ; TODO (cam): I think we just need to tell it how to handle MBQL match and we can enable this?
  :used-underscored-binding {:level :off} ; false positives: see https://github.com/clj-kondo/clj-kondo/issues/2152

  ;;
  ;; TODO (cam): here are some more linters we should experiment with enabling -- some might be useful.
  ;;

  ;; :docstring-leading-trailing-whitespace {:level :warning}
  ;; :docstring-no-summary                  {:level :warning}
  ;; :shadowed-var                          {:level :warning}
  ;; :def-fn                                {:level :warning}

  :unresolved-symbol
  {:exclude
   [(build.uberjar/with-duration-ms)
    (cljs.test/is [=? malli=])
    (clojure.core.logic/fresh)
    (clojure.core.logic/matcha)
    (clojure.core.logic/run)
    (clojure.test/is [query= =? malli=])
    (clojure.tools.macro/macrolet)
    instaparse.core/transform
    (beesbuddy.async.streaming-response/streaming-response)
    (beesbuddy.driver.druid.query-processor-test/druid-query-returning-rows)
    (beesbuddy.lib.util.match/match)
    (beesbuddy.lib.util.match/match-one)
    (beesbuddy.lib.util.match/replace)
    (beesbuddy.lib.util.match/replace-in)
    (beesbuddy.query-processor.middleware.cache-backend.interface/with-cached-results)
    (beesbuddy.util.regex/rx [opt])
    (beesbuddy.util/prog1 [<>])
    (taoensso.nippy/extend-freeze)
    (taoensso.nippy/extend-thaw)]}

  :deprecated-var
  {:exclude
   {beesbuddy.cmd/dump                                                            {:namespaces ["beesbuddy\\.cmd-test" "beesbuddy-enterprise\\.serialization\\.cmd-test"]}
    beesbuddy.cmd/load                                                            {:namespaces ["beesbuddy\\.cmd-test" "beesbuddy-enterprise\\.serialization\\.cmd-test"]}
    beesbuddy.db.data-migrations/data-migrations                                  {:namespaces ["beesbuddy\\.db\\.data-migrations"]}
    beesbuddy.db.data-migrations/defmigration                                     {:namespaces ["beesbuddy\\.db\\.data-migrations"]}
    beesbuddy.db.data-migrations/run-migration-if-needed!                         {:namespaces ["beesbuddy\\.db\\.data-migrations"]}
    beesbuddy.driver.sql-jdbc.execute.old-impl/set-timezone-sql                   {:namespaces ["beesbuddy\\.driver.*"]}
    beesbuddy.driver.sql-jdbc.execute/set-time-zone-if-supported!                 {:namespaces ["beesbuddy\\.driver.*"]}
    beesbuddy.driver/current-db-time                                              {:namespaces ["beesbuddy.*"]}
    beesbuddy.driver/supports?                                                    {:namespaces ["beesbuddy.*"]}
    beesbuddy.public-settings.premium-features/enable-enhancements?               {:namespaces ["beesbuddy\\.models.*"]}
    beesbuddy.query-processor.middleware.resolve-joins/maybe-resolve-source-table {:namespaces ["beesbuddy.*"]}
    beesbuddy.query-processor.util/normalize-token                                {:namespaces ["beesbuddy.*"]}
    schema.core/both                                                             {:namespaces ["beesbuddy.*"]}
    schema.core/either                                                           {:namespaces ["beesbuddy.*"]}}}

  :discouraged-var
  {clojure.core/print                                 {:message "Use beesbuddy.util.log instead of clojure.core/print"}
   clojure.core/println                               {:message "Use beesbuddy.util.log instead of clojure.core/println"}
   clojure.core/printf                                {:message "Use beesbuddy.util.log instead of clojure.core/printf"}
   clojure.core/prn                                   {:message "Use beesbuddy.util.log instead of clojure.core/prn"}
   clojure.core/pr                                    {:message "Use beesbuddy.util.log instead of clojure.core/pr"}
   clojure.core/tap>                                  {:message "Don't use tap> is source code"}
   clojure.core/time                                  {:message "Don't use time in source code"}
   clojure.java.jdbc/get-connection                   {:message "Use sql-jdbc.execute/do-with-connection-with-options (for drivers) or t2/with-connection (for the app DB) instead of jdbc/get-connection"}
   clojure.java.jdbc/with-db-connection               {:message "Use sql-jdbc.execute/do-with-connection-with-options (for drivers) or t2/with-connection (for the app DB) instead of jdbc/with-db-connection"}
   clojure.java.jdbc/with-db-metadata                 {:message "Use sql-jdbc.execute/do-with-connection-with-options + .getMetaData instead of jdbc/with-db-metadata"}
   clojure.pprint/pprint                              {:message "Use beesbuddy.util.log instead of clojure.pprint/pprint"}
   clojure.string/lower-case                          {:message "Use beesbuddy.util/lower-case-en instead of clojure.string/lower-case"}
   clojure.string/upper-case                          {:message "Use beesbuddy.util/upper-case-en instead of clojure.string/upper-case"}
   fipp.edn/pprint                                    {:message "Use beesbuddy.util.log instead of fipp.edn/pprint"}
   honeysql.core/call                                 {:message "Use hx/call instead because it is Honey SQL 2 friendly"}
   honeysql.core/raw                                  {:message "Use hx/raw instead because it is Honey SQL 2 friendly"}
   java-time/with-clock                               {:message "Use mt/with-clock"}
   java.util.UUID/randomUUID                          {:message "Use clojure.core/random-uuid instead of java.util.UUID/randomUUID"}
   malli.core/explainer                               {:message "Use beesbuddy.util.malli.registry/explainer instead of malli.core/explainer"}
   me.flowthing.pp/pprint                             {:message "Use beesbuddy.util.log instead of me.flowthing.pp/pprint"}
   medley.core/random-uuid                            {:message "Use clojure.core/random-uuid instead of medley.core/random-uuid"}
   beesbuddy.lib.equality/find-column-indexes-for-refs {:message "Use lib.equality/closest-matches-in-metadata or lib.equality/find-closest-matches-for-refs instead of lib.equality/find-column-indexes-for-refs"}
   beesbuddy.test/with-temp*                           {:message "Use mt/with-temp instead of mt/with-temp*"}
   toucan2.tools.with-temp                            {:message "Use mt/with-temp instead of t2.with-temp/with-temp"}}

  :discouraged-namespace
  {camel-snake-kebab.core {:message "CSK is not Turkish-safe, use the versions in beesbuddy.util instead."}
   clojure.tools.logging  {:message "Use beesbuddy.util.log instead of clojure.tools.logging directly"}
   honeysql.core          {:message "Use Honey SQL 2. Honey SQL 1 is removed as a dependency in beesbuddy 49+."}
   honeysql.format        {:message "Use Honey SQL 2. Honey SQL 1 is removed as a dependency in beesbuddy 49+."}
   honeysql.helpers       {:message "Use Honey SQL 2. Honey SQL 1 is removed as a dependency in beesbuddy 49+."}
   honeysql.types         {:message "Use Honey SQL 2. Honey SQL 1 is removed as a dependency in beesbuddy 49+."}
   honeysql.util          {:message "Use Honey SQL 2. Honey SQL 1 is removed as a dependency in beesbuddy 49+."}
   beesbuddy.util.jvm     {:message "All of beesbuddy.util.jvm is re-exported from beesbuddy.util; prefer that"}}

  :unresolved-var
  {:exclude
   [colorize.core]}

  ;; A "module" is any `beesbuddy.x` namespace in `src`.
  :beesbuddy/ns-module-checker
  {:level :warning

   ;; Map of module name => the "core" external public-facing API namespace(s). You have three options here:
   ;;
   ;; 1. Special sentinel value `:any` means means this module does not (yet) have external public-facing API
   ;;    namespace(s). This is mostly a temporary placeholder until we go in and create module namespaces, which means
   ;;    you should go create one.
   ;;
   ;; 2. A set of namespace symbols. All namespaces in other modules will only be allowed ;; to use namespaces from
   ;;    this set. Ideally this set should only have one namespace, but restricting it to a set of several is still
   ;;    better than `:any`.
   ;;
   ;; 3. `nil` or not listed here -- we default to assuming there is one API namespace that matches the name of the
   ;;    module itself, e.g. the module namespace for `beesbuddy.setup` would be `beesbuddy.setup`.
   ;;
   ;; `nil` or an empty set  Otherwise this should be a set of namespace symbols.
   ;;
   ;; PRO TIP: Check out the `dev.deps-graph` namespace for helpful tools to see where a module is used externally.
   :api-namespaces
   {beesbuddy.actions               #{beesbuddy.actions.core}
    beesbuddy.analytics             #{beesbuddy.analytics.prometheus
                                     beesbuddy.analytics.snowplow
                                     beesbuddy.analytics.stats}                                      ; TODO -- consolidate these into a real API namespace.
    beesbuddy.analyze               #{beesbuddy.analyze}
    beesbuddy.api                   #{beesbuddy.api.common
                                     beesbuddy.api.dataset
                                     beesbuddy.api.permission-graph
                                     beesbuddy.api.routes}                                           ; TODO -- consolidate these into a real API namespace. I think the `*current-user*` type stuff might need to be moved into a separate module.
    beesbuddy.async                 #{beesbuddy.async.streaming-response
                                     beesbuddy.async.streaming-response.thread-pool
                                     beesbuddy.async.util}                                           ; TODO -- consolidate these into a real API namespace.
    beesbuddy.bootstrap             #{beesbuddy.bootstrap}
    beesbuddy.cmd                   #{}                                                              ; there are no namespaces here since you shouldn't be using this in any other module.
    beesbuddy.config                #{beesbuddy.config}
    beesbuddy.core                  #{beesbuddy.core.initialization-status}                           ; TODO -- only namespace used outside of EE, this probably belongs in `beesbuddy.server` anyway since that's the only place it's used.
    beesbuddy.db                    #{beesbuddy.db
                                     beesbuddy.db.metadata-queries                                   ; TODO this should probably be separate from beesbuddy.db
                                     beesbuddy.db.query                                              ; TODO this is mostly util stuff like `beesbuddy.db.query/query` that we don't even need anymore.
                                     beesbuddy.db.setup}                                             ; TODO these are only calling `beesbuddy.db.setup/setup-db!` and there's a slightly different version in `beesbuddy.db`
    beesbuddy.driver                :any                                                             ; TODO -- 19 namespaces!!!! CRY
    beesbuddy.email                 #{beesbuddy.email
                                     beesbuddy.email.messages}                                       ; TODO -- consolidate these into a real API namespace.
    beesbuddy.embed                 #{beesbuddy.embed.settings}
    beesbuddy.events                #{beesbuddy.events}
    beesbuddy.formatter             #{beesbuddy.formatter}
    beesbuddy.integrations          #{beesbuddy.integrations.common
                                     beesbuddy.integrations.google
                                     beesbuddy.integrations.ldap
                                     beesbuddy.integrations.slack}                                   ; TODO -- consolidate these into a real API namespace.
    beesbuddy.legacy-mbql           #{beesbuddy.legacy-mbql.normalize
                                     beesbuddy.legacy-mbql.predicates
                                     beesbuddy.legacy-mbql.schema
                                     beesbuddy.legacy-mbql.schema.helpers
                                     beesbuddy.legacy-mbql.util}                                     ; TODO -- consolidate these into a real API namespace.
    beesbuddy.lib                   :any                                                             ; TODO -- :cry: 34 externally referenced namespaces, but maybe half of them are schema namespaces which technically don't need to be required.
    beesbuddy.logger                #{beesbuddy.logger}
    beesbuddy.metabot               #{beesbuddy.metabot}
    beesbuddy.models                :any                                                             ; TODO -- scream, 62 namespaces used elsewhere, but to be fair a lot of these don't *need* to be required.
    beesbuddy.moderation            #{beesbuddy.moderation}
    beesbuddy.native-query-analyzer #{beesbuddy.native-query-analyzer}
    beesbuddy.permissions           #{beesbuddy.permissions.util}                                     ; TODO -- this is currently the only namespace in this module. Give it a real API namespace?
    beesbuddy.plugins               #{beesbuddy.plugins
                                     beesbuddy.plugins.classloader}                                  ; TODO -- not 100% sure the classloader belongs here
    beesbuddy.public-settings       #{beesbuddy.public-settings
                                     beesbuddy.public-settings.premium-features}
    beesbuddy.pulse                 #{beesbuddy.pulse
                                     beesbuddy.pulse.markdown
                                     beesbuddy.pulse.parameters
                                     beesbuddy.pulse.preview
                                     beesbuddy.pulse.render
                                     beesbuddy.pulse.render.image-bundle
                                     beesbuddy.pulse.render.js-svg
                                     beesbuddy.pulse.render.style}                                   ; TODO -- consolidate these into a real API namespace.
    beesbuddy.query-processor       :any                                                             ; TODO omg scream, 29 namespaces used outside of the module. WHAT THE HECC
    beesbuddy.related               #{beesbuddy.related}
    beesbuddy.sample-data           #{beesbuddy.sample-data}
    beesbuddy.search                #{beesbuddy.search}
    beesbuddy.server                #{beesbuddy.server
                                     beesbuddy.server.handler
                                     beesbuddy.server.middleware.auth
                                     beesbuddy.server.middleware.exceptions
                                     beesbuddy.server.middleware.json
                                     beesbuddy.server.middleware.misc
                                     beesbuddy.server.middleware.offset-paging
                                     beesbuddy.server.middleware.session
                                     beesbuddy.server.protocols
                                     beesbuddy.server.request.util}                                  ; TODO -- consolidate these into a real API namespace.
    beesbuddy.setup                 #{beesbuddy.setup}
    beesbuddy.shared                #{beesbuddy.shared.dashboards.constants
                                     beesbuddy.shared.formatting.constants
                                     beesbuddy.shared.formatting.date
                                     beesbuddy.shared.formatting.numbers
                                     beesbuddy.shared.models.visualization-settings
                                     beesbuddy.shared.parameters.parameters
                                     beesbuddy.shared.util.currency
                                     beesbuddy.shared.util.i18n
                                     beesbuddy.shared.util.internal.time-common
                                     beesbuddy.shared.util.namespaces
                                     beesbuddy.shared.util.time}                                     ; TODO -- consolidate these into a real API namespace.
    beesbuddy.sync                  #{beesbuddy.sync
                                     beesbuddy.sync.analyze
                                     beesbuddy.sync.concurrent
                                     beesbuddy.sync.field-values
                                     beesbuddy.sync.schedules
                                     beesbuddy.sync.sync-metadata
                                     beesbuddy.sync.sync-metadata.fields
                                     beesbuddy.sync.sync-metadata.tables
                                     beesbuddy.sync.util}                                            ; TODO -- consolidate these into a real API namespace.
    beesbuddy.task                  #{beesbuddy.task
                                     beesbuddy.task.index-values
                                     beesbuddy.task.persist-refresh}                                 ; TODO -- consolidate these into a real API namespace.
    beesbuddy.troubleshooting       #{beesbuddy.troubleshooting}
    beesbuddy.types                 #{beesbuddy.types}
    beesbuddy.upload                #{beesbuddy.upload}
    beesbuddy.util                  :any                                                             ; I think util being `:any` is actually something I am ok with. But this has 32 namespaces.
    beesbuddy.xrays                 #{beesbuddy.xrays}}

   ;; Map of module => other modules you're allowed to use there. You have two options here:
   ;;
   ;; 1. `:any` means namespaces in this module are allowed to use any other module -- allowed modules are not
   ;;    enforced for this module. Module API namespaces for modules that have them defined are still enforced. For
   ;;    ones that are `nil`, please go in and add a list of allowed modules. `:any` is mostly meant a temporary
   ;;    placeholder until we can fill these all out, so feel free to fix these.
   ;;
   ;; 2. A set of module symbols. This is the list of modules that are allowed to be referenced. An empty set means no
   ;;    other modules are allowed to be referenced; this is the default for any modules that aren't listed here.
   :allowed-modules
   {beesbuddy.actions               :any
    beesbuddy.analytics             :any
    beesbuddy.analyze               :any
    beesbuddy.api                   :any
    beesbuddy.async                 :any
    beesbuddy.bootstrap             #{}
    beesbuddy.cmd                   :any
    beesbuddy.compatibility         :any
    beesbuddy.config                #{beesbuddy.plugins}
    beesbuddy.core                  :any
    beesbuddy.db                    :any
    beesbuddy.driver                :any
    beesbuddy.email                 :any
    beesbuddy.embed                 :any
    beesbuddy.events                :any
    beesbuddy.formatter             :any
    beesbuddy.integrations          :any
    beesbuddy.legacy-mbql           :any
    beesbuddy.lib                   :any
    beesbuddy.logger                #{beesbuddy.config
                                     beesbuddy.plugins}
    beesbuddy.metabot               :any
    beesbuddy.models                :any
    beesbuddy.moderation            :any
    beesbuddy.native-query-analyzer :any
    beesbuddy.permissions           :any
    beesbuddy.plugins               :any
    beesbuddy.public-settings       :any
    beesbuddy.pulse                 :any
    beesbuddy.query-processor       :any
    beesbuddy.related               :any
    beesbuddy.sample-data           :any
    beesbuddy.search                :any
    beesbuddy.server                :any
    beesbuddy.setup                 :any
    beesbuddy.shared                :any
    beesbuddy.sync                  :any
    beesbuddy.task                  :any
    beesbuddy.troubleshooting       :any
    beesbuddy.types                 #{beesbuddy.util}
    beesbuddy.upload                :any
    beesbuddy.util                  :any
    beesbuddy.xrays                 :any}

   ;; namespaces matching these patterns (with `re-find`) are excluded from the module linter. Since regex literals
   ;; aren't allowed in EDN just used the `(str <regex>)` version i.e. two slashes instead of one.
   ;;
   ;; this is mostly intended for excluding test namespaces or those rare 'glue' namespaces that glue multiple modules
   ;; together, e.g. `beesbuddy.lib.metadata.jvm`.
   :ignored-namespace-patterns
   #{"-test$"                           ; anything ending in `-test`
     "test[-.]util"                     ; anything that contains `test.util` or `test-util`
     "test\\.impl"                      ; anything that contains `test.impl`
     "^beesbuddy\\.test"                 ; anything starting with `beesbuddy.test`
     "^beesbuddy\\.http-client$"}}       ; `beesbuddy.http-client` which is a test-only namespace despite its name.

  :consistent-alias
  {:aliases
   {buddy.core.hash                                               buddy-hash
    cheshire.generate                                             json.generate
    clojure.tools.logging                                         log
    clj-http.client                                               http
    clj-ldap.client                                               ldap
    clj-time.coerce                                               time.coerce
    clj-time.format                                               time.format
    clojure.core.async                                            a
    clojure.core.match                                            clojure.core.match ; Prefer :refer [match]
    clojure.data                                                  data
    clojure.math.combinatorics                                    math.combo
    clojure.pprint                                                pprint
    clojure.spec.alpha                                            s
    clojure.string                                                str
    clojure.test                                                  t
    clojure.tools.build.api                                       b
    clojure.tools.namespace.dependency                            ns.deps
    clojure.tools.namespace.find                                  ns.find
    clojure.tools.namespace.parse                                 ns.parse
    colorize.core                                                 colorize
    environ.core                                                  env
    hf.depstar.api                                                depstar
    hiccup.core                                                   hiccup
    hiccup.util                                                   hiccup.util
    honey.sql                                                     sql
    honey.sql.helpers                                             sql.helpers
    honeysql.core                                                 hsql
    honeysql.format                                               hformat
    honeysql.helpers                                              hh
    honeysql.types                                                htypes
    java-time                                                     t
    macaw.core                                                    macaw
    malli.core                                                    mc
    malli.error                                                   me
    malli.experimental                                            mx
    malli.generator                                               mg
    malli.provider                                                mp
    malli.transform                                               mtx
    malli.util                                                    mut
    medley.core                                                   m
    beesbuddy-enterprise.audit-app.pages.common                    common
    beesbuddy-enterprise.sandbox.api.table                         table
    beesbuddy-enterprise.test                                      met
    beesbuddy.analytics.stats                                      stats
    beesbuddy.analyze.query-results                                qr
    beesbuddy.analyze.classifiers.category                         classifiers.category
    beesbuddy.analyze.classifiers.core                             classifiers
    beesbuddy.analyze.classifiers.name                             classifiers.name
    beesbuddy.analyze.classifiers.no-preview-display               classifiers.no-preview-display
    beesbuddy.analyze.classifiers.text-fingerprint                 classifiers.text-fingerprint
    beesbuddy.analyze.fingerprint.fingerprinters                   fingerprinters
    beesbuddy.analyze.fingerprint.insights                         insights
    beesbuddy.analyze.fingerprint.schema                           fingerprint.schema
    beesbuddy.api.activity                                         api.activity
    beesbuddy.api.alert                                            api.alert
    beesbuddy.api.automagic-dashboards                             api.magic
    beesbuddy.api.bookmark                                         api.bookmark
    beesbuddy.api.card                                             api.card
    beesbuddy.api.card-test                                        api.card-test
    beesbuddy.api.collection                                       api.collection
    beesbuddy.api.common                                           api
    beesbuddy.api.dashboard                                        api.dashboard
    beesbuddy.api.dashboard-test                                   api.dashboard-test
    beesbuddy.api.database                                         api.database
    beesbuddy.api.dataset                                          api.dataset
    beesbuddy.api.email                                            api.email
    beesbuddy.api.embed                                            api.embed
    beesbuddy.api.field                                            api.field
    beesbuddy.api.geojson                                          api.geojson
    beesbuddy.api.ldap                                             api.ldap
    beesbuddy.api.logic-history                                    api.login-history
    beesbuddy.api.metric                                           api.metric
    beesbuddy.api.native-query-snippet                             api.native-query-snippet
    beesbuddy.api.notify                                           api.notify
    beesbuddy.api.permission-graph                                 api.permission-graph
    beesbuddy.api.permissions                                      api.permissions
    beesbuddy.api.permissions-test-util                            perm-test-util
    beesbuddy.api.pivots                                           api.pivots
    beesbuddy.api.premium-features                                 api.premium-features
    beesbuddy.api.preview-embed                                    api.preview-embed
    beesbuddy.api.public                                           api.public
    beesbuddy.api.pulse                                            api.pulse
    beesbuddy.api.revision                                         api.revision
    beesbuddy.api.search                                           api.search
    beesbuddy.api.segment                                          api.segment
    beesbuddy.api.session                                          api.session
    beesbuddy.api.setting                                          api.setting
    beesbuddy.api.setup                                            api.setup
    beesbuddy.api.slack                                            api.slack
    beesbuddy.api.table                                            api.table
    beesbuddy.api.task                                             api.task
    beesbuddy.api.tiles                                            api.tiles
    beesbuddy.api.timeline                                         api.timeline
    beesbuddy.api.timeline-event                                   api.timeline-event
    beesbuddy.api.user                                             api.user
    beesbuddy.api.util                                             api.util
    beesbuddy.async.streaming-response.thread-pool                 thread-pool
    beesbuddy.cmd.copy.h2                                          copy.h2
    beesbuddy.config                                               config
    beesbuddy.config.file                                          config.file
    beesbuddy.connection-pool                                      connection-pool
    beesbuddy.db.connection                                        mdb.connection
    beesbuddy.db.jdbc-protocols                                    mdb.jdbc-protocols
    beesbuddy.db.metadata-queries                                  metadata-queries
    beesbuddy.db.spec                                              mdb.spec
    beesbuddy.db.query                                             mdb.query
    beesbuddy.driver.common.parameters                             params
    beesbuddy.driver.common.parameters.dates                       params.dates
    beesbuddy.driver.common.parameters.operators                   params.ops
    beesbuddy.driver.common.parameters.parse                       params.parse
    beesbuddy.driver.common.parameters.values                      params.values
    beesbuddy.driver.druid.client                                  druid.client
    beesbuddy.driver.druid.execute                                 druid.execute
    beesbuddy.driver.druid.js                                      druid.js
    beesbuddy.driver.druid.query-processor                         druid.qp
    beesbuddy.driver.druid.sync                                    druid.sync
    beesbuddy.driver.googleanalytics.client                        ga.client
    beesbuddy.driver.googleanalytics.execute                       ga.execute
    beesbuddy.driver.googleanalytics.metadata                      ga.metadata
    beesbuddy.driver.googleanalytics.query-processor               ga.qp
    beesbuddy.driver.impl                                          driver.impl
    beesbuddy.driver.mongo.execute                                 mongo.execute
    beesbuddy.driver.mongo.parameters                              mongo.params
    beesbuddy.driver.mongo.query-processor                         mongo.qp
    beesbuddy.driver.mongo.util                                    mongo.util
    beesbuddy.driver.sql                                           driver.sql
    beesbuddy.driver.sql-jdbc.common                               sql-jdbc.common
    beesbuddy.driver.sql-jdbc.connection                           sql-jdbc.conn
    beesbuddy.driver.sql-jdbc.execute                              sql-jdbc.execute
    beesbuddy.driver.sql-jdbc.execute.diagnostic                   sql-jdbc.execute.diagnostic
    beesbuddy.driver.sql-jdbc.execute.legacy-impl                  sql-jdbc.legacy
    beesbuddy.driver.sql-jdbc.execute.old-impl                     sql-jdbc.execute.old
    beesbuddy.driver.sql-jdbc.sync                                 sql-jdbc.sync
    beesbuddy.driver.sql-jdbc.sync.common                          sql-jdbc.sync.common
    beesbuddy.driver.sql-jdbc.sync.describe-database               sql-jdbc.describe-database
    beesbuddy.driver.sql-jdbc.sync.describe-table                  sql-jdbc.describe-table
    beesbuddy.driver.sql-jdbc.sync.interface                       sql-jdbc.sync.interface
    beesbuddy.driver.sql-jdbc.test-util                            sql-jdbc.tu
    beesbuddy.driver.sql.parameters.substitute                     sql.params.substitute
    beesbuddy.driver.sql.parameters.substitution                   sql.params.substitution
    beesbuddy.email-test                                           et
    beesbuddy.email.messages                                       messages
    beesbuddy.formatter                                            formatter
    beesbuddy.http-client                                          client
    beesbuddy.legacy-mbql.normalize                                mbql.normalize
    beesbuddy.legacy-mbql.schema                                   mbql.s
    beesbuddy.legacy-mbql.util                                     mbql.u
    beesbuddy.lib.util                                             lib.util
    beesbuddy.lib.util.match                                       lib.util.match
    beesbuddy.models.activity                                      activity
    beesbuddy.models.application-permissions-revision              a-perm-revision
    beesbuddy.models.bookmark                                      bookmark
    beesbuddy.models.collection                                    collection
    beesbuddy.models.collection.graph                              graph
    beesbuddy.models.collection-permission-graph-revision          c-perm-revision
    beesbuddy.models.dashboard-card                                dashboard-card
    beesbuddy.models.database                                      database
    beesbuddy.models.dependency                                    dependency
    beesbuddy.models.field-values                                  field-values
    beesbuddy.models.interface                                     mi
    beesbuddy.models.moderation-review                             moderation-review
    beesbuddy.models.native-query-snippet                          native-query-snippet
    beesbuddy.models.params                                        params
    beesbuddy.models.permissions                                   perms
    beesbuddy.models.permissions-group                             perms-group
    beesbuddy.models.permissions-group-membership                  perms-group-membership
    beesbuddy.models.permissions-revision                          perms-revision
    beesbuddy.models.permissions.parse                             perms-parse
    beesbuddy.models.pulse                                         pulse
    beesbuddy.models.pulse-channel                                 pulse-channel
    beesbuddy.models.pulse-channel-recipient                       pulse-channel-recipient
    beesbuddy.models.query.permissions                             query-perms
    beesbuddy.models.setting.cache                                 setting.cache
    beesbuddy.models.timeline                                      timeline
    beesbuddy.models.timeline-event                                timeline-event
    beesbuddy.native-query-analyzer                                query-analyzer
    beesbuddy.native-query-analyzer.parameter-substitution         nqa.sub
    beesbuddy.plugins.initialize                                   plugins.init
    beesbuddy.public-settings                                      public-settings
    beesbuddy.public-settings.premium-features                     premium-features
    beesbuddy.pulse                                                pulse ; NB some conflicts with beesbuddy.models.pulse
    beesbuddy.pulse.markdown                                       markdown
    beesbuddy.pulse.render                                         render
    beesbuddy.pulse.render.body                                    body
    beesbuddy.pulse.render.style                                   style
    beesbuddy.pulse.test-util                                      pulse.test-util
    beesbuddy.pulse.parameters                                     pulse-params
    beesbuddy.query-processor-test                                 qp.test
    beesbuddy.query-processor.context                              qp.context
    beesbuddy.query-processor.error-type                           qp.error-type
    beesbuddy.query-processor.interface                            qp.i
    beesbuddy.query-processor.middleware.add-dimension-projections qp.add-dimension-projections
    beesbuddy.query-processor.middleware.add-implicit-clauses      qp.add-implicit-clauses
    beesbuddy.query-processor.middleware.add-implicit-joins        qp.add-implicit-joins
    beesbuddy.query-processor.middleware.auto-bucket-datetimes     qp.auto-bucket-datetimes
    beesbuddy.query-processor.middleware.constraints               qp.constraints
    beesbuddy.query-processor.middleware.cumulative-aggregations   qp.cumulative-aggregations
    beesbuddy.query-processor.middleware.parameters.mbql           qp.mbql
    beesbuddy.query-processor.middleware.parameters.native         qp.native
    beesbuddy.query-processor.middleware.permissions               qp.perms
    beesbuddy.query-processor.middleware.pre-alias-aggregations    qp.pre-alias-aggregations
    beesbuddy.query-processor.middleware.resolve-fields            qp.resolve-fields
    beesbuddy.query-processor.middleware.resolve-referenced        qp.resolve-referenced
    beesbuddy.query-processor.middleware.resolve-source-table      qp.resolve-source-table
    beesbuddy.query-processor.middleware.wrap-value-literals       qp.wrap-value-literals
    beesbuddy.query-processor.pivot                                qp.pivot
    beesbuddy.query-processor.streaming                            qp.streaming
    beesbuddy.query-processor.streaming.interface                  qp.si
    beesbuddy.query-processor.streaming.xlsx                       qp.xlsx
    beesbuddy.query-processor.timezone                             qp.timezone
    beesbuddy.query-processor.util                                 qp.util
    beesbuddy.related                                              related
    beesbuddy.search.config                                        search.config
    beesbuddy.search.filter                                        search.filter
    beesbuddy.search.util                                          search.util
    beesbuddy.search.scoring                                       scoring
    beesbuddy.server.middleware.auth                               mw.auth
    beesbuddy.server.middleware.browser-cookie                     mw.browser-cookie
    beesbuddy.server.middleware.exceptions                         mw.exceptions
    beesbuddy.server.middleware.json                               mw.json
    beesbuddy.server.middleware.log                                mw.log
    beesbuddy.server.middleware.misc                               mw.misc
    beesbuddy.server.middleware.offset-paging                      mw.offset-paging
    beesbuddy.server.middleware.security                           mw.security
    beesbuddy.server.middleware.session                            mw.session
    beesbuddy.server.middleware.ssl                                mw.ssl
    beesbuddy.server.request.util                                  req.util
    beesbuddy.server.protocols                                     server.protocols
    beesbuddy.shared.util                                          shared.u
    beesbuddy.shared.util.currency                                 currency
    beesbuddy.sync.analyze.fingerprint                             sync.fingerprint
    beesbuddy.sync.field-values                                    field-values
    beesbuddy.sync.interface                                       i
    beesbuddy.sync.schedules                                       sync.schedules
    beesbuddy.sync.sync-metadata.fields.our-metadata               fields.our-metadata
    beesbuddy.sync.util                                            sync-util
    beesbuddy.sync.util-test                                       sync.util-test
    beesbuddy.task.sync-databases                                  task.sync-databases
    beesbuddy.test                                                 mt
    beesbuddy.test.data.dataset-definitions                        defs
    beesbuddy.test.data.env.impl                                   tx.env.impl
    beesbuddy.test.data.impl                                       data.impl
    beesbuddy.test.data.users                                      test.users
    beesbuddy.test.domain-entities                                 test.de
    beesbuddy.test.mock.util                                       mock.util
    beesbuddy.test.sync                                            test.sync
    beesbuddy.test.redefs                                          test.redefs
    beesbuddy.test.util.js                                         test.js
    beesbuddy.test.util.timezone                                   test.tz
    beesbuddy.timeseries-query-processor-test.util                 tqpt
    beesbuddy.util.cron                                            u.cron
    beesbuddy.util.date-2                                          u.date
    beesbuddy.util.date-2.common                                   u.date.common
    beesbuddy.util.date-2.parse                                    u.date.parse
    beesbuddy.util.embed                                           embed
    beesbuddy.util.encryption                                      encryption
    beesbuddy.util.encryption-test                                 encryption-test
    beesbuddy.util.files                                           u.files
    beesbuddy.util.honey-sql-2                                     h2x
    beesbuddy.util.i18n                                            i18n
    beesbuddy.util.i18n.impl                                       i18n.impl
    beesbuddy.util.jvm                                             u.jvm
    beesbuddy.util.log                                             log
    beesbuddy.util.macros                                          u.macros
    beesbuddy.util.malli                                           mu
    beesbuddy.util.malli.schema                                    ms
    beesbuddy.util.password                                        u.password
    beesbuddy.util.schema                                          su
    beesbuddy.util.ui-logic                                        ui-logic
    beesbuddy.util.urls                                            urls
    beesbuddy.xrays                                                xrays
    metabuild-common.core                                         u
    metabuild-common.output                                       out
    metabuild-common.shell                                        shell
    monger.collection                                             mcoll
    ring.mock.request                                             ring.mock
    ring.util.codec                                               codec
    ring.util.response                                            response
    ring.adapter.jetty9.servlet                                   servlet
    saml20-clj.core                                               saml
    toucan.db                                                     db
    toucan.models                                                 models}}}

 :lint-as
 {clojure.core.logic/defne                                                             clj-kondo.lint-as/def-catch-all
  clojure.test.check.clojure-test/defspec                                              clojure.test/deftest
  clojurewerkz.quartzite.jobs/defjob                                                   clojure.core/defn
  honeysql.helpers/defhelper                                                           clj-kondo.lint-as/def-catch-all
  honeysql.util/defalias                                                               clojure.core/def
  beesbuddy-enterprise.serialization.test-util/with-random-dump-dir                     clojure.core/let
  beesbuddy-enterprise.serialization.test-util/with-dbs                                 clojure.core/fn
  beesbuddy.actions.test-util/with-actions                                              clojure.core/let
  beesbuddy.api.common/let-404                                                          clojure.core/let
  beesbuddy.api.common/defroutes                                                        clojure.core/def
  beesbuddy.api.search-test/do-test-users                                               clojure.core/let
  beesbuddy.async.api-response-test/with-response                                       clojure.core/let
  beesbuddy.dashboard-subscription-test/with-dashboard-sub-for-card                     clojure.core/let
  beesbuddy.db.custom-migrations/define-migration                                       clj-kondo.lint-as/def-catch-all
  beesbuddy.db.custom-migrations/define-reversible-migration                            clj-kondo.lint-as/def-catch-all
  beesbuddy.db.data-migrations/defmigration                                             clojure.core/def
  beesbuddy.db.liquibase/with-liquibase                                                 clojure.core/let
  beesbuddy.db.schema-migrations-test.impl/with-temp-empty-app-db                       clojure.core/let
  beesbuddy.driver.mongo.query-processor/mongo-let                                      clojure.core/let
  beesbuddy.driver.mongo.connection/with-mongo-client                                   clojure.core/let
  beesbuddy.driver.mongo.connection/with-mongo-database                                 clojure.core/let
  beesbuddy.driver.sql-jdbc.actions/with-jdbc-transaction                               clojure.core/let
  beesbuddy.driver.sql-jdbc.connection/with-connection-spec-for-testing-connection      clojure.core/let
  beesbuddy.driver.sql-jdbc.execute.diagnostic/capturing-diagnostic-info                clojure.core/fn
  beesbuddy.integrations.ldap/with-ldap-connection                                      clojure.core/fn
  beesbuddy.models.collection-test/with-collection-in-location                          clojure.core/let
  beesbuddy.models.json-migration/def-json-migration                                    clj-kondo.lint-as/def-catch-all
  beesbuddy.models.setting.multi-setting/define-multi-setting                           clojure.core/def
  beesbuddy.models.setting/defsetting                                                   clj-kondo.lint-as/def-catch-all
  beesbuddy.public-settings.premium-features/defenterprise-schema                       clj-kondo.lint-as/def-catch-all
  beesbuddy.public-settings.premium-features/define-premium-feature                     clojure.core/def
  beesbuddy.pulse-test/with-pulse-for-card                                              clojure.core/let
  beesbuddy.query-processor.error-type/deferror                                         clojure.core/def
  beesbuddy.query-processor.setup/with-qp-setup                                         clojure.core/let
  beesbuddy.query-processor.middleware.cache.impl/with-reducible-deserialized-results   clojure.core/let
  beesbuddy.query-processor.middleware.process-userland-query-test/with-query-execution clojure.core/let
  beesbuddy.query-processor-test.pipeline-queries-test/pmbql-query                      clojure.core/->
  beesbuddy.query-processor-test.pipeline-queries-test/run-pmbql-query                  clojure.core/->
  beesbuddy.shared.util.namespaces/import-fns                                           potemkin/import-vars
  beesbuddy.sync.util/sum-for                                                           clojure.core/for
  beesbuddy.sync.util/with-emoji-progress-bar                                           clojure.core/let
  beesbuddy.test.data.interface/defdataset                                              clojure.core/def
  beesbuddy.test.data.interface/defdataset-edn                                          clojure.core/def
  beesbuddy.test/defdataset                                                             clojure.core/def
  beesbuddy.test/let-url                                                                clojure.core/let
  beesbuddy.test/with-actions                                                           clojure.core/let
  beesbuddy.test/with-open-channels                                                     clojure.core/let
  beesbuddy.test/with-single-admin-user                                                 clojure.core/fn
  beesbuddy.test/with-temp-dir                                                          clojure.core/let
  beesbuddy.test/with-temp-empty-app-db                                                 clojure.core/let
  beesbuddy.test/with-temp-file                                                         clojure.core/let
  beesbuddy.test/with-user-in-groups                                                    clojure.core/let
  beesbuddy.upload-test/with-upload-table!                                              clojure.core/let
  beesbuddy.util.files/with-open-path-to-resource                                       clojure.core/let
  beesbuddy.util.malli.defn/defn                                                        schema.core/defn
  beesbuddy.util.malli.fn/fn                                                            schema.core/fn
  beesbuddy.util.malli/defmethod                                                        schema.core/defmethod
  beesbuddy.util.malli/defn                                                             schema.core/defn
  beesbuddy.util.malli/fn                                                               schema.core/fn
  beesbuddy.util.ssh/with-ssh-tunnel                                                    clojure.core/let
  beesbuddy.xrays.domain-entities.malli/defn                                            schema.core/defn
  monger.operators/defoperator                                                         clojure.core/def
  potemkin.types/defprotocol+                                                          clojure.core/defprotocol
  potemkin.types/defrecord+                                                            clojure.core/defrecord
  potemkin.types/deftype+                                                              clojure.core/deftype
  potemkin/defprotocol+                                                                clojure.core/defprotocol
  potemkin/defrecord+                                                                  clojure.core/defrecord
  potemkin/deftype+                                                                    clojure.core/deftype
  toucan.db/with-call-counting                                                         clojure.core/fn
  toucan2.core/with-call-count                                                         clojure.core/fn}

 :hooks
 {:analyze-call
  {clojure.core/ns                                                                                                           hooks.clojure.core/lint-ns
   cljs.test/deftest                                                                                                         hooks.clojure.test/deftest
   cljs.test/is                                                                                                              hooks.clojure.test/is
   cljs.test/use-fixtures                                                                                                    hooks.clojure.test/use-fixtures
   clojure.test/deftest                                                                                                      hooks.clojure.test/deftest
   clojure.test/is                                                                                                           hooks.clojure.test/is
   clojure.test/use-fixtures                                                                                                 hooks.clojure.test/use-fixtures
   beesbuddy-enterprise.cache.config-test/with-temp-persist-models                                                            hooks.common/with-seven-bindings
   beesbuddy-enterprise.advanced-permissions.models.permissions.application-permissions-test/with-new-group-and-current-graph hooks.common/with-two-top-level-bindings
   beesbuddy-enterprise.audit-app.pages-test/with-temp-objects                                                                hooks.common/with-one-binding
   beesbuddy-enterprise.serialization.test-util/with-temp-dpc                                                                 hooks.toucan2.tools.with-temp/with-temp
   beesbuddy.analytics.prometheus-test/with-prometheus-system                                                                 hooks.common/with-two-bindings
   beesbuddy.api.automagic-dashboards-test/with-indexed-model                                                                 hooks.beesbuddy.api.automagic-dashboards-test/with-indexed-model
   beesbuddy.api.alert-test/with-alert-in-collection                                                                          hooks.common/with-four-bindings
   beesbuddy.api.card-test/with-persistence-setup                                                                             hooks.common/with-one-top-level-binding
   beesbuddy.api.card-test/with-temp-native-card!                                                                             hooks.common/with-two-bindings
   beesbuddy.api.card-test/with-temp-native-card-with-params!                                                                 hooks.common/with-two-bindings
   beesbuddy.api.collection-test/with-french-user-and-personal-collection                                                     hooks.common/with-two-top-level-bindings
   beesbuddy.api.dashboard-test/with-chain-filter-fixtures                                                                    hooks.common/let-one-with-optional-value
   beesbuddy.api.dashboard-test/with-simple-dashboard-with-tabs                                                               hooks.common/with-one-binding
   beesbuddy.api.card-test/with-card-param-values-fixtures                                                                    hooks.common/let-one-with-optional-value
   beesbuddy.api.embed-test/do-response-formats                                                                               hooks.common/with-two-bindings
   beesbuddy.api.embed-test/with-chain-filter-fixtures                                                                        hooks.common/let-one-with-optional-value
   beesbuddy.api.embed-test/with-temp-card                                                                                    hooks.common/let-one-with-optional-value
   beesbuddy.api.embed-test/with-temp-dashcard                                                                                hooks.common/let-one-with-optional-value
   beesbuddy.api.persist-test/with-setup                                                                                      hooks.common/with-one-top-level-binding
   beesbuddy.api.public-test/with-required-param-card                                                                         hooks.common/with-one-binding
   beesbuddy.api.public-test/with-temp-public-card                                                                            hooks.common/let-one-with-optional-value
   beesbuddy.api.public-test/with-temp-public-dashboard                                                                       hooks.common/let-one-with-optional-value
   beesbuddy.api.public-test/with-temp-public-dashboard-and-card                                                              hooks.common/with-three-bindings
   beesbuddy.api.search-test/with-search-items-in-collection                                                                  hooks.beesbuddy.api.search-test/with-search-items-in-collection
   beesbuddy.api.search-test/with-search-items-in-root-collection                                                             hooks.common/do*
   beesbuddy.api.user-test/with-temp-user-email                                                                               hooks.common/with-one-binding
   beesbuddy.async.streaming-response-test/with-start-execution-chan                                                          hooks.common/with-one-binding
   beesbuddy.db.schema-migrations-test.impl/test-migrations                                                                   hooks.beesbuddy.db.schema-migrations-test.impl/test-migrations
   beesbuddy.dashboard-subscription-test/with-link-card-fixture-for-dashboard                                                 hooks.common/let-second
   beesbuddy.driver.bigquery-cloud-sdk-test/calculate-bird-scarcity                                                           hooks.beesbuddy.query-processor-test.expressions-test/calculate-bird-scarcity
   beesbuddy.driver/register!                                                                                                 hooks.beesbuddy.driver/register!
   beesbuddy.legacy-mbql.schema.macros/defclause                                                                              hooks.beesbuddy.legacy-mbql.schemas.macros/defclause
   beesbuddy.lib.schema.mbql-clause/define-mbql-clause                                                                        hooks.beesbuddy.lib.schema.mbql-clause/define-mbql-clause
   beesbuddy.lib.schema.mbql-clause/define-catn-mbql-clause                                                                   hooks.beesbuddy.lib.schema.mbql-clause/define-mbql-clause
   beesbuddy.lib.schema.mbql-clause/define-tuple-mbql-clause                                                                  hooks.beesbuddy.lib.schema.mbql-clause/define-mbql-clause
   beesbuddy.lib.test-util.macros/$ids                                                                                        hooks.beesbuddy.test.data/$ids
   beesbuddy.lib.test-util.macros/mbql-query                                                                                  hooks.beesbuddy.test.data/mbql-query
   beesbuddy.lib.test-util.macros/with-testing-against-standard-queries                                                       hooks.beesbuddy.lib.test-util.macros/with-testing-against-standard-queries
   beesbuddy.models.collection-test/with-collection-hierarchy                                                                 hooks.common/let-one-with-optional-value
   beesbuddy.models.collection-test/with-personal-and-impersonal-collections                                                  hooks.common/with-two-bindings
   beesbuddy.models.dashboard-test/with-dash-in-collection                                                                    hooks.common/with-three-bindings
   beesbuddy.models.dashboard-tab-test/with-dashtab-in-personal-collection                                                    hooks.common/with-one-top-level-binding
   beesbuddy.models.interface/define-simple-hydration-method                                                                  hooks.beesbuddy.models.interface/define-hydration-method
   beesbuddy.models.interface/define-batched-hydration-method                                                                 hooks.beesbuddy.models.interface/define-hydration-method
   beesbuddy.models.pulse-test/with-dashboard-subscription-in-collection                                                      hooks.common/with-four-bindings
   beesbuddy.models.pulse-test/with-pulse-in-collection                                                                       hooks.common/with-four-bindings
   beesbuddy.models.setting.multi-setting/define-multi-setting                                                                hooks.beesbuddy.models.setting/define-multi-setting
   beesbuddy.models.setting/defsetting                                                                                        hooks.beesbuddy.models.setting/defsetting
   beesbuddy.public-settings.premium-features/defenterprise                                                                   hooks.beesbuddy.public-settings.premium-features/defenterprise
   beesbuddy.pulse.test-util/checkins-query-card                                                                              hooks.beesbuddy.test.data/$ids
   beesbuddy.query-processor-test.expressions-test/calculate-bird-scarcity                                                    hooks.beesbuddy.query-processor-test.expressions-test/calculate-bird-scarcity
   beesbuddy.query-processor-test.filter-test/count-with-filter-clause                                                        hooks.beesbuddy.test.data/$ids
   beesbuddy.query-processor.middleware.cache-test/with-mock-cache                                                            hooks.common/with-two-bindings
   beesbuddy.sample-data-test/with-temp-sample-database-db                                                                    hooks.common/with-one-binding
   beesbuddy.test.data.users/with-group                                                                                       hooks.common/let-one-with-optional-value
   beesbuddy.test.data/$ids                                                                                                   hooks.beesbuddy.test.data/$ids
   beesbuddy.test.data/dataset                                                                                                hooks.beesbuddy.test.data/dataset
   beesbuddy.test.data/mbql-query                                                                                             hooks.beesbuddy.test.data/mbql-query
   beesbuddy.test.data/run-mbql-query                                                                                         hooks.beesbuddy.test.data/mbql-query
   beesbuddy.test.util.async/with-open-channels                                                                               hooks.common/let-with-optional-value-for-last-binding
   beesbuddy.test.util.log/with-log-level                                                                                     hooks.common/with-ignored-first-arg
   beesbuddy.test.util.log/with-log-messages-for-level                                                                        hooks.common/with-ignored-first-arg
   beesbuddy.test.util/discard-setting-changes                                                                                hooks.common/with-ignored-first-arg
   beesbuddy.test.util/with-column-remappings                                                                                 hooks.common/with-ignored-first-arg
   beesbuddy.test.util/with-non-admin-groups-no-root-collection-perms                                                         hooks.common/do*
   beesbuddy.test.util/with-temp-file                                                                                         hooks.beesbuddy.test.util/with-temp-file
   beesbuddy.test.util/with-temporary-setting-values                                                                          hooks.beesbuddy.test.util/with-temporary-setting-values
   beesbuddy.test/$ids                                                                                                        hooks.beesbuddy.test.data/$ids
   beesbuddy.test/dataset                                                                                                     hooks.beesbuddy.test.data/dataset
   beesbuddy.test/discard-setting-changes                                                                                     hooks.common/with-ignored-first-arg
   beesbuddy.test/mbql-query                                                                                                  hooks.beesbuddy.test.data/mbql-query
   beesbuddy.test/query                                                                                                       hooks.beesbuddy.test.data/mbql-query
   beesbuddy.test/test-drivers                                                                                                hooks.common/do*
   beesbuddy.test/run-mbql-query                                                                                              hooks.beesbuddy.test.data/mbql-query
   beesbuddy.test/with-column-remappings                                                                                      hooks.common/with-ignored-first-arg
   beesbuddy.test/with-group                                                                                                  hooks.common/let-one-with-optional-value
   beesbuddy.test/with-log-level                                                                                              hooks.common/with-ignored-first-arg
   beesbuddy.test/with-log-messages-for-level                                                                                 hooks.common/with-ignored-first-arg
   beesbuddy.test/with-non-admin-groups-no-root-collection-perms                                                              hooks.common/do*
   beesbuddy.test/with-temp                                                                                                   hooks.toucan2.tools.with-temp/with-temp
   beesbuddy.test/with-temp-file                                                                                              hooks.beesbuddy.test.util/with-temp-file
   beesbuddy.test/with-temporary-setting-values                                                                               hooks.beesbuddy.test.util/with-temporary-setting-values
   beesbuddy.util/format-color                                                                                                hooks.beesbuddy.util/format-color
   beesbuddy.util.log/trace                                                                                                   hooks.beesbuddy.util.log/info
   beesbuddy.util.log/tracef                                                                                                  hooks.beesbuddy.util.log/infof
   beesbuddy.util.log/debug                                                                                                   hooks.beesbuddy.util.log/info
   beesbuddy.util.log/debugf                                                                                                  hooks.beesbuddy.util.log/infof
   beesbuddy.util.log/info                                                                                                    hooks.beesbuddy.util.log/info
   beesbuddy.util.log/infof                                                                                                   hooks.beesbuddy.util.log/infof
   beesbuddy.util.log/warn                                                                                                    hooks.beesbuddy.util.log/info
   beesbuddy.util.log/warnf                                                                                                   hooks.beesbuddy.util.log/infof
   beesbuddy.util.log/error                                                                                                   hooks.beesbuddy.util.log/info
   beesbuddy.util.log/errorf                                                                                                  hooks.beesbuddy.util.log/infof
   beesbuddy.util.log/fatal                                                                                                   hooks.beesbuddy.util.log/info
   beesbuddy.util.log/fatalf                                                                                                  hooks.beesbuddy.util.log/infof
   beesbuddy.util.malli.registry/def                                                                                          hooks.beesbuddy.util.malli.registry/def}

  :macroexpand
  {clojurewerkz.quartzite.jobs/build                                            macros.quartz/build-job
   clojurewerkz.quartzite.schedule.cron/schedule                                macros.quartz/schedule
   clojurewerkz.quartzite.schedule.simple/schedule                              macros.quartz/simple-schedule
   clojurewerkz.quartzite.triggers/build                                        macros.quartz/build-trigger
   beesbuddy-enterprise.sandbox.test-util/with-gtaps!                            macros.beesbuddy-enterprise.sandbox.test-util/with-gtaps!
   beesbuddy-enterprise.serialization.test-util/with-world                       macros.beesbuddy-enterprise.serialization.test-util/with-world
   beesbuddy-enterprise.test/with-gtaps!                                         macros.beesbuddy-enterprise.sandbox.test-util/with-gtaps!
   beesbuddy-enterprise.advanced-permissions.api.util-test/with-impersonations!  macros.beesbuddy-enterprise.advanced-permissions.api.util-test/with-impersonations!
   beesbuddy.api.card-test/with-ordered-items                                    macros.beesbuddy.api.card-test/with-ordered-items
   beesbuddy.api.collection-test/with-collection-hierarchy                       macros.beesbuddy.api.collection-test/with-collection-hierarchy
   beesbuddy.api.collection-test/with-some-children-of-collection                macros.beesbuddy.api.collection-test/with-some-children-of-collection
   beesbuddy.api.common/defendpoint                                              macros.beesbuddy.api.common/defendpoint
   beesbuddy.api.common/defendpoint-async                                        macros.beesbuddy.api.common/defendpoint
   beesbuddy.api.common/defendpoint-async-schema                                 macros.beesbuddy.api.common/defendpoint
   beesbuddy.api.common/define-routes                                            macros.beesbuddy.api.common/define-routes
   beesbuddy.api.embed-test/with-embedding-enabled-and-temp-card-referencing     macros.beesbuddy.api.embed-test/with-embedding-enabled-and-temp-card-referencing
   beesbuddy.api.embed-test/with-embedding-enabled-and-temp-dashcard-referencing macros.beesbuddy.api.embed-test/with-embedding-enabled-and-temp-dashcard-referencing
   beesbuddy.api.public-test/with-sharing-enabled-and-temp-card-referencing      macros.beesbuddy.api.public-test/with-sharing-enabled-and-temp-card-referencing
   beesbuddy.api.public-test/with-sharing-enabled-and-temp-dashcard-referencing  macros.beesbuddy.api.public-test/with-sharing-enabled-and-temp-dashcard-referencing
   beesbuddy.lib.filter/deffilter                                                macros.beesbuddy.lib.filter/deffilter
   beesbuddy.lib.common/defop                                                    macros.beesbuddy.lib.common/defop
   beesbuddy.models.params.chain-filter-test/chain-filter                        macros.beesbuddy.models.params.chain-filter-test/chain-filter
   beesbuddy.models.params.chain-filter-test/chain-filter-search                 macros.beesbuddy.models.params.chain-filter-test/chain-filter
   beesbuddy.models.query-field-test/with-test-setup                             macros.beesbuddy.models.query-field-test/with-test-setup
   beesbuddy.models.user-test/with-groups                                        macros.beesbuddy.models.user-test/with-groups
   beesbuddy.query-processor.streaming/streaming-response                        macros.beesbuddy.query-processor.streaming/streaming-response
   beesbuddy.related-test/with-world                                             macros.beesbuddy.related-test/with-world
   beesbuddy.shared.util.namespaces/import-fn                                    macros.beesbuddy.shared.util.namespaces/import-fn
   beesbuddy.test.data.users/with-group-for-user                                 macros.beesbuddy.test.data.users/with-group-for-user
   beesbuddy.test.util/with-temp-env-var-value!                                  macros.beesbuddy.test.util/with-temp-env-var-value!
   beesbuddy.test.util/with-temporary-raw-setting-values                         macros.beesbuddy.test.util/with-temporary-raw-setting-values
   beesbuddy.test/with-group-for-user                                            macros.beesbuddy.test.data.users/with-group-for-user
   beesbuddy.test/with-persistence-enabled                                       macros.beesbuddy.test.persistence/with-persistence-enabled
   beesbuddy.test/with-temp-env-var-value!                                       macros.beesbuddy.test.util/with-temp-env-var-value!
   beesbuddy.test/with-temporary-raw-setting-values                              macros.beesbuddy.test.util/with-temporary-raw-setting-values
   beesbuddy.xrays.domain-entities.malli/define-getters-and-setters              macros.beesbuddy.xrays.domain-entities.malli/define-getters-and-setters}}

 :config-in-comment
 {:linters {:unresolved-symbol {:level :off}}}

 ;;
 ;; TEST CONFIG
 ;;
 :ns-groups
 ;; the following patterns are considered to be test namespaces:
 ;;
 ;; - Any namespace ending in `-test` or `-test.whatever`
 ;; - Any namespace containing in `test-util`
 ;; - Any namespace that starts with `beesbuddy.test`
 ;;
 ;; this list isn't exhaustive because it misses some stuff like the test runner and HTTP client but it's easier to go
 ;; fix those namespaces than it is to make this regex super hairy.
 [{:pattern "(?:.*-test(?:\\..*)?$)|(?:.*test-util)|(?:^beesbuddy\\.test.*)"
   :name    test-namespaces}
  {:pattern "^(?!.*-test(?:\\..*)?$)(?!.*test-util)(?!^beesbuddy\\.test.*).*$"
   :name    source-namespaces}
  {:pattern "(?:(?:^beesbuddy\\.cmd.*)|(?:^build.*)|(?:^metabuild-common.*)|(?:^release.*)|(?:^i18n.*)|(?:^lint-migrations-file$))"
   :name    printable-namespaces}
  {:pattern "^beesbuddy\\.(?:(?:lib)|(?:legacy-mbql))\\.*"
   :name    beesbuddy-lib}
  ;;
  ;; QP source namespaces: `beesbuddy.query-processor.*`, `beesbuddy-enterprise.sandbox.query-processor.*`, and
  ;; `beesbuddy.driver.*`, excluding `-test` namespaces.
  ;;
  {:pattern "beesbuddy(?:(?:(?:-enterprise\\.sandbox)?\\.query-processor\\.)|(?:\\.driver\\.)).*(?<!-test)$"
   :name    qp-and-driver-source-namespaces}]

 :config-in-ns
 {test-namespaces
  {:linters
   {:inline-def                              {:level :off}
    :missing-docstring                       {:level :off}
    :private-call                            {:level :off}
    :beesbuddy/defsetting-must-specify-export {:level :off}}
   :hooks
   {:analyze-call
    {clojure.core/defmacro hooks.clojure.core/non-thread-safe-form-should-end-with-exclamation
     clojure.core/defn     hooks.clojure.core/non-thread-safe-form-should-end-with-exclamation
     clojure.core/defn-    hooks.clojure.core/non-thread-safe-form-should-end-with-exclamation}}}

  source-namespaces
  {:linters
   {:discouraged-var
    {clojure.core/with-redefs {:message "Don't use with-redefs outside of tests"}
     clojure.core/eval        {:message "Don't use eval outside of tests"}}}}

  printable-namespaces
  {:linters
   {:main-without-gen-class {:level :off}
    :discouraged-var        {clojure.pprint/pprint     {:level :off}
                             clojure.core/print        {:level :off}
                             clojure.core/printf       {:level :off}
                             clojure.core/println      {:level :off}
                             clojure.string/lower-case {:level :off}
                             clojure.string/upper-case {:level :off}}}}

  ;; enable all the extra linters we haven't enabled in the core app yet in MLv2. It's all new code so we can adhere
  ;; to the new stricter rules from day 1
  beesbuddy-lib
  {:linters
   {:docstring-leading-trailing-whitespace                {:level :warning}
    :used-underscored-binding                             {:level :warning}
    :keyword-binding                                      {:level :warning}
    :shadowed-var                                         {:level :warning}
    :beesbuddy/deftest-not-marked-parallel-or-synchronized {:level :warning}

    ;; eventually we should do this for the whole codebase, but the args are in the opposite order so switching them
    ;; all at once isn't trivial, at least we can stop using it in new code.
    :discouraged-var
    {medley.core/map-keys    {:message "Use clojure.core/update-keys"}
     medley.core/map-vals    {:message "Use clojure.core/update-vals"}
     beesbuddy.test/with-temp {:message "Don't use application database inside MLv2 code"}}

    :discouraged-namespace
    {beesbuddy.driver            {:message "MLv2 code should be independent of driver code/methods"}
     beesbuddy.test              {:message "MLv2 tests should only use MLv2 test helpers"}
     beesbuddy.test.data         {:message "MLv2 tests should only use MLv2 test helpers"}
     beesbuddy.util.malli.schema {:message "Prefer beesbuddy.lib.schema schemas in MLv2 code"}
     toucan.db                  {:message "Don't use application database inside MLv2 code"}
     toucan.models              {:message "Don't use application database inside MLv2 code"}
     toucan.util.test           {:message "Don't use application database inside MLv2 code"}
     toucan2.core               {:message "Don't use application database inside MLv2 code"}}}}

  qp-and-driver-source-namespaces
  {:linters
   {:discouraged-namespace
    {beesbuddy.util.malli.schema {:message "Prefer beesbuddy.lib.schema or beesbuddy.legacy-mbql.schema schemas in QP/driver code"}
     toucan.db                  {:message "Don't use application database directly in QP code; use QP Store/metadata provider"}
     toucan.models              {:message "Don't use application database directly in QP code; use QP Store/metadata provider"}
     toucan.util.test           {:message "Don't use application database directly in QP code; use QP Store/metadata provider"}
     toucan2.core               {:message "Don't use application database directly in QP code; use QP Store/metadata provider"}}

    :discouraged-var
    {medley.core/map-keys              {:message "Use clojure.core/update-keys"}
     medley.core/map-vals              {:message "Use clojure.core/update-vals"}
     beesbuddy.db.query/query           {:message "Don't use application database directly in QP code; use QP Store/metadata provider"}
     beesbuddy.db.query/reducible-query {:message "Don't use application database directly in QP code; use QP Store/metadata provider"}}}}}}
